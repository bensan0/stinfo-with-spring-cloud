<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.personal.project.stockservice.mapper.DailyStockInfoMapper">

    <resultMap id="BaseResultMap" type="com.personal.project.stockservice.model.entity.DailyStockInfoDO">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="stockId" column="stock_id" jdbcType="VARCHAR"/>
        <result property="stockName" column="stock_name" jdbcType="VARCHAR"/>
        <result property="date" column="date" jdbcType="BIGINT"/>
        <result property="todayClosingPrice" column="today_closing_price" jdbcType="DECIMAL"/>
        <result property="yesterdayClosingPrice" column="yesterday_closing_price" jdbcType="DECIMAL"/>
        <result property="priceGap" column="price_gap" jdbcType="DECIMAL"/>
        <result property="priceGapPercent" column="price_gap_percent" jdbcType="DECIMAL"/>
        <result property="openingPrice" column="opening_price" jdbcType="DECIMAL"/>
        <result property="highestPrice" column="highest_price" jdbcType="DECIMAL"/>
        <result property="lowestPrice" column="lowest_price" jdbcType="DECIMAL"/>
        <result property="todayTradingVolumePiece" column="today_trading_volume_piece" jdbcType="BIGINT"/>
        <result property="todayTradingVolumeMoney" column="today_trading_volume_money" jdbcType="DECIMAL"/>
        <result property="yesterdayTradingVolumePiece" column="yesterday_trading_volume_piece" jdbcType="BIGINT"/>
        <result property="yesterdayTradingVolumeMoney" column="yesterday_trading_volume_money" jdbcType="DECIMAL"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_id,stock_name,'date',today_closing_price,yesterday_closing_price,
        price_gap,price_gap_percent,opening_price,highest_price,lowest_price,
        today_trading_volume_piece,today_trading_volume_money,yesterday_trading_volume_piece,
        yesterday_trading_volume_money
    </sql>

    <!--    考慮以快取替代-->
    <!--    排除收盤價為空之資訊(當日未開盤)後,依照股票代號分組後排序,給予暫時序號 -->
    <select id="getLastMaPriceInfo" parameterType="com.personal.project.stockservice.model.dto.Query4CalDTO" resultType="com.personal.project.stockservice.model.dto.PastClosingPriceDTO">
        select T.*
        from (
            select tt.stock_id as stockId,
                   tt.stock_name as stockName,
                   tt.date as 'date',
                   tt.today_closing_price as closingPrice,
                   row_number() over (partition by stock_id order by 'date' desc) as 'sequence'
            from (
                select *
                from daily_stock_info
                where today_closing_price is not null
                and date &lt; #{date}
                 ) tt
             ) T
        where T.sequence in (5, 10, 20, 60, 120, 240)
    </select>

    <select id="getLastMaPriceInfo4Manual" parameterType="com.personal.project.stockservice.model.dto.ManualCalDTO" resultType="com.personal.project.stockservice.model.dto.PastClosingPriceDTO">
        select T.*
        from (
                 select tt.stock_id as stockId,
                        tt.stock_name as stockName,
                        tt.date as 'date',
                         tt.today_closing_price as closingPrice,
                        row_number() over (partition by stock_id order by 'date' desc) as 'sequence'
                 from (
                          select *
                          from daily_stock_info
                          where today_closing_price is not null
                            and date &lt; #{date}
                      ) tt
             ) T
        where T.sequence in (5, 10, 20, 60, 120, 240)
    </select>

    <select id="queryInfo4CalDetail" parameterType="com.personal.project.stockservice.model.dto.Query4CalDTO" resultType="com.personal.project.stockservice.model.dto.StockInfo4CalDetailDTO">
        select T.*
        from (
                 select
                     tt.stock_id as stockId,
                     tt.stock_name as stockName,
                     tt.date as 'date',
                     tt.today_closing_price as todayClosingPrice,
                     tt.yesterday_closing_price as yesterdayClosingPrice,
                     tt.opening_price as openingPrice,
                     tt.highest_price as highestPrice,
                     tt.lowest_price as lowestPrice,
                     tt.today_trading_volume_piece as todayTradingVolumePiece,
                     tt.yesterday_trading_volume_piece as yesterdayTradingVolumePiece,
                     tt.today_trading_volume_money as todayTradingVolumeMoney,
                     tt.yesterday_trading_volume_money as yesterdayTradingVolumeMoney,
                     row_number() over (partition by stock_id order by 'date' desc) as 'sequence'
                 from (
                          select *
                          from daily_stock_info
                          where 'date' = #{date} or today_closing_price is not null
                      ) tt
             ) T
        where T.sequence in (1, 2, 3, 5)
    </select>

    <select id="queryInfo4CalDetail4Manual" parameterType="com.personal.project.stockservice.model.dto.ManualCalDTO"
            resultType="com.personal.project.stockservice.model.dto.StockInfo4CalDetailDTO">
        select T.*
        from (
                 select
                     tt.stock_id as stockId,
                     tt.stock_name as stockName,
                     tt.date as 'date',
                     tt.today_closing_price as todayClosingPrice,
                     tt.yesterday_closing_price as yesterdayClosingPrice,
                     tt.opening_price as openingPrice,
                     tt.highest_price as highestPrice,
                     tt.lowest_price as lowestPrice,
                     tt.today_trading_volume_piece as todayTradingVolumePiece,
                     tt.yesterday_trading_volume_piece as yesterdayTradingVolumePiece,
                     tt.today_trading_volume_money as todayTradingVolumeMoney,
                     tt.yesterday_trading_volume_money as yesterdayTradingVolumeMoney,
                     row_number() over (partition by stock_id order by 'date' desc) as 'sequence'
                 from (
                          select *
                          from daily_stock_info
                          where 'date' = #{date} or today_closing_price is not null
                      ) tt
             ) T
        where T.sequence in (1, 2, 3, 5)
    </select>
</mapper>